# Sorry, this depends on a special fork of clang-format, so it will not work
# with a standard clang-format.  Even more unfortunately, I don't know how to
# make the format file do any kind if detection.
#
# If you want to run the formatter with this file, then you can optionally
# have cmake build wjh-format with -DBUILD_WJH_FORMAT=ON
AccessModifierOffset: -4
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: None
AlignConsecutiveAssignments:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignConsecutiveBitFields:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignConsecutiveDeclarations:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignConsecutiveMacros:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignEscapedNewlines: DontAlign
AlignOperands:   DontAlign
AlignTrailingComments: false
AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowBreakAfterTypeDeclarationParen: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: TopLevelDefinitions
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
AnonymousNamespaceText: 'anonymous namespace'
AttributeMacros:
  - __capability
BasedOnStyle:    ''
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      true
  AfterControlStatement: MultiLine
  AfterEnum:       true
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: true
  BeforeCatch:     false
  BeforeElse:      false
  BeforeLambdaBody: false
  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakAfterAttributes: Always
BreakAfterJavaFieldAnnotations: false
#BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: Always
BreakBeforeInheritanceComma: true
BreakBeforeTernaryOperators: true
BreakBeforeTrailingReturnArrow: true
BreakBeforeQualifiedFunction: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeEither
BreakStringLiterals: true
ColumnLimit:     80
CommentPragmas:  '^ IWYU pragma:'
CompactNamespaces: true
ConstructorInitializerIndentWidth: 0
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DeriveLineEnding: false
DerivePointerAlignment: false
DisableFormat:   false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
ExperimentalAutoDetectBinPacking: false
ExtraSpaceFollowingConstructorInitializers: false
FixNamespaceComments: true
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
  - SECTION
  - GIVEN
  - THEN
  - WHEN
  - AND_GIVEN
  - AND_THEN
  - AND_WHEN
  - SHOULD
  - SUBCASE
IfMacros:
  - KJ_IF_MAYBE
IncludeBlocks:   Regroup
IncludeCategories:
  - Regex:           '^(<|")wjh/config.hpp("|>)$'
    Priority:        -1
    SortPriority:    -1
    CaseSensitive:   true
  - Regex:           '^(<|")doctest/doctest.h("|>)$'
    Priority:        1000
    SortPriority:    1000
    CaseSensitive:   true
  - Regex:           '^(<|")wjh/testing/doctest.hpp("|>)$'
    Priority:        1000
    SortPriority:    1000
    CaseSensitive:   true
  - Regex:           '^"[^/]+"$'
    Priority:        1
    SortPriority:    1
    CaseSensitive:   true
  - Regex:           '^(<|")wjh/'
    Priority:        2
    SortPriority:    2
    CaseSensitive:   true
  - Regex:           '^(<|")boost/'
    Priority:        3
    SortPriority:    3
    CaseSensitive:   true
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        5
    SortPriority:    5
    CaseSensitive:   true
  - Regex:           '^(<|")(gtest|gmock|isl|json)/'
    Priority:        4
    SortPriority:    4
    CaseSensitive:   true
  - Regex:           '<[a-zA-Z0-9_-]+>'
    Priority:        11
    SortPriority:    11
    CaseSensitive:   true
  - Regex:           '<sys/.*\.h>'
    Priority:        9
    SortPriority:    9
    CaseSensitive:   true
  - Regex:           '^<[^/]+/.'
    Priority:        6
    SortPriority:    6
    CaseSensitive:   true
  - Regex:           '<.*\.h>'
    Priority:        12
    SortPriority:    12
    CaseSensitive:   true
  - Regex:           '.*'
    Priority:        10
    SortPriority:    10
    CaseSensitive:   true

IncludeIsMainRegex: '(_ut|Test)?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: AfterExternBlock
IndentGotoLabels: true
IndentPPDirectives: BeforeHash
IndentRequiresClause: false
IndentWidth:     4
IndentWrappedFunctionNames: false
InsertBraces:    true
InsertNewlineAtEOF: true
InsertTrailingCommas: None
IntegerLiteralSeparator:
    Binary: 4
    BinaryMinDigits: 8
    Decimal: 0
    DecimalMinDigits: 7
    Hex: 4
    HexMinDigits: 8
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
Language:        Cpp
LineEnding: LF
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 2
NamespaceIndentation: None
ObjCBinPackProtocolList: Auto
ObjCBlockIndentWidth: 2
ObjCBreakBeforeNestedBlockParam: true
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
PPIndentWidth:   -1
PackConstructorInitializers: Never

PenaltyBreakAssignment: 100
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200
PenaltyIndentedWhitespace: 0

PointerAlignment: Middle
QualifierAlignment: Custom
QualifierOrder: ['inline', 'static', 'constexpr', 'type', 'const', 'volatile', 'restrict']
ReferenceAlignment: Pointer
ReflowComments:  true
RemoveBracesLLVM: false
RemoveSemicolon: false
ReplaceLogicalNot: true
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope
# Note that is currently does not honor MaxEmptyLinesToKeep, in that if there
# are 2 blank lines already separating definition blocks, and
# MaxEmptyLinesToKeep is 2, both blank links will be replaced with one.
SeparateDefinitionBlocks: Always
ShortNamespaceLines: 4
SortIncludes:    CaseSensitiveNameOnly
SortJavaStaticImport: Before
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: true
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeOverloadedOperator: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: false
  AfterFunctionDeclarationName: false
  AfterFunctionDefinitionName: false
  AfterIfMacros:   false
  AfterOverloadedOperator: true
  AfterRequiresInClause: false
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInLineCommentPrefix:
  Minimum:         1
  Maximum:         -1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard:        Latest
StatementAttributeLikeMacros:
  - Q_EMIT
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth:        8
UseCRLF:         false
UseTab:          Never
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
  - NS_SWIFT_NAME
  - CF_SWIFT_NAME
